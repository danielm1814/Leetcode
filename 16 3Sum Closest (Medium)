class Solution(object):
    def twoSum(self, arr, target):
        start = 0
        end = len(arr)-1
        best = arr[0] + arr[1]
        while (start < end):
            curr = arr[start] + arr[end]
            if (abs (target-curr) < abs(target-best)):
                best = curr
            if (curr > target):
                end -= 1
            elif (curr < target):
                start += 1
            else:
                return target
        return best

    def threeSumClosest(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        nums = sorted(nums)
        closest = nums[0] + nums[1] + nums[2]
        for i in range (len(nums)-2):
            value = self.twoSum(nums[i+1:], target-nums[i])
            value = value + nums[i]
            if (abs(target-closest) > abs(target-value)):
                closest = value
        return closest
    
    
