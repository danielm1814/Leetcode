# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def replaceValueInTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:
        queue = []
        queue.append((root, root.val))
        ans = []
        while len(queue) != 0:
            level_sum = 0
            for i in queue:
                level_sum += i[0].val
            for i in range(len(queue)):
                node, sums = queue.pop(0)
                if node.left and node.right:
                    queue.append((node.left, node.left.val+node.right.val))
                    queue.append((node.right, node.left.val+node.right.val))
                elif node.right:
                    queue.append((node.right, node.right.val))
                elif node.left:
                    queue.append((node.left, node.left.val))
                node.val = level_sum - sums
        return root
