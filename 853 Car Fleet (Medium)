class Solution(object):
    def carFleet(self, target, position, speed):
        """
        :type target: int
        :type position: List[int]
        :type speed: List[int]
        :rtype: int
        """
        pairs = []
        for i in range(len(position)):
            pairs.append((position[i], speed[i]))
        pairs.sort(key=lambda x:x[0], reverse=True)
        stack = []
        stack.append(pairs[0])
        for idx in range(1, len(pairs)):
            if pairs[idx][1] > stack[-1][1]:
                pos_fleet, speed_fleet = stack[-1]
                time_pos = float((target-pos_fleet))/speed_fleet
                time_curr = float((target-pairs[idx][0]))/pairs[idx][1]
                if time_curr > time_pos:
                    stack.append(pairs[idx])
            else:
                stack.append(pairs[idx])
        return len(stack)
                
            
